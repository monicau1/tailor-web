<!-- views/admin/dashboard.ejs -->
<style>
  .cursor-pointer {
    cursor: pointer;
  }
  .cursor-pointer:hover {
    background-color: rgba(0, 0, 0, 0.05);
  }
  #chartWrapper {
    min-height: 300px;
  }
  #chartLoading {
    background: rgba(255, 255, 255, 0.8);
    z-index: 1;
  }
</style>

<div class="container-fluid py-4">
  <!-- Metric Cards -->
  <div class="row g-3 mb-4">
    <!-- Total Pesanan -->
    <div class="col-md-4">
      <div class="card h-100">
        <div class="card-body">
          <div class="d-flex align-items-center">
            <div class="bg-primary bg-opacity-10 p-3 rounded-3 me-3">
              <i class="fas fa-shopping-bag text-primary fs-4"></i>
            </div>
            <div>
              <h6 class="card-subtitle mb-1 text-muted">Total Pesanan</h6>
              <h2 class="card-title mb-0"><%= totalPesanan %></h2>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Modifikasi card Total Pendapatan di dashboard.ejs -->
    <div class="col-md-4">
      <div class="card h-100">
        <div class="card-body">
          <div class="d-flex justify-content-between align-items-start mb-3">
            <div class="d-flex align-items-center">
              <div class="bg-success bg-opacity-10 p-3 rounded-3 me-3">
                <i class="fas fa-money-bill-wave text-success fs-4"></i>
              </div>
              <div>
                <h6 class="card-subtitle mb-1 text-muted">Total Pendapatan</h6>
                <h2 class="card-title mb-0" id="totalPendapatanValue">
                  Rp <%= formatNumber(totalPendapatan) %>
                </h2>
              </div>
            </div>
            <select
              class="form-select form-select-sm"
              id="periodePendapatan"
              style="width: auto"
            >
              <option value="all">Semua</option>
              <option value="today">Hari Ini</option>
              <option value="week">Minggu Ini</option>
              <option value="month">Bulan Ini</option>
              <option value="year">Tahun Ini</option>
            </select>
          </div>
          <small class="text-muted" id="periodePendapatanText"
            >Total semua waktu</small
          >
        </div>
      </div>
    </div>

    <!-- Total Pelanggan -->
    <div class="col-md-4">
      <div class="card h-100">
        <div class="card-body">
          <div class="d-flex align-items-center">
            <div class="bg-info bg-opacity-10 p-3 rounded-3 me-3">
              <i class="fas fa-users text-info fs-4"></i>
            </div>
            <div>
              <h6 class="card-subtitle mb-1 text-muted">Total Pelanggan</h6>
              <h2 class="card-title mb-0"><%= totalPelanggan %></h2>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Grafik dan Tabel -->
  <div class="row">
    <!-- Chart Card -->
    <div class="col-lg-8 mb-4">
      <div class="card h-100">
        <div
          class="card-header d-flex justify-content-between align-items-center"
        >
          <h5 class="card-title mb-0">Tren Pendapatan</h5>
          <div class="d-flex gap-2">
            <select
              class="form-select form-select-sm"
              id="monthFilter"
              style="width: 120px"
            >
              <option value="all">Semua Bulan</option>
              <% const months = ['Januari', 'Februari', 'Maret', 'April', 'Mei',
              'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November',
              'Desember']; %> <% months.forEach((month, index) => { %>
              <option value="<%= index + 1 %>"><%= month %></option>
              <% }); %>
            </select>

            <select
              class="form-select form-select-sm"
              id="yearFilter"
              style="width: 100px"
            >
              <% const currentYear = new Date().getFullYear(); %> <% for(let
              year = currentYear; year >= currentYear-2; year--) { %>
              <option value="<%= year %>"><%= year %></option>
              <% } %>
            </select>
          </div>
        </div>
        <div class="card-body">
          <div id="chartWrapper" class="position-relative">
            <div id="chartLoading" class="position-absolute w-100 h-100 d-none">
              <div
                class="d-flex justify-content-center align-items-center h-100"
              >
                <div class="spinner-border text-primary" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
              </div>
            </div>
            <canvas id="trenPendapatanChart" height="100"></canvas>
          </div>
        </div>
      </div>
    </div>

    <!-- Pesanan Terbaru Card -->
    <div class="col-lg-4">
      <div class="card h-100">
        <div
          class="card-header d-flex justify-content-between align-items-center"
        >
          <h5 class="card-title mb-0">Pesanan Terbaru</h5>
          <a href="/admin/pesanan" class="btn btn-sm btn-primary"
            >Lihat Semua</a
          >
        </div>
        <div class="card-body p-0">
          <div class="table-responsive">
            <table class="table table-hover mb-0">
              <tbody>
                <% pesananTerbaru.forEach(function(pesanan) { %>
                <tr
                  class="cursor-pointer"
                  onclick="window.location.href='/admin/pesanan/<%= pesanan.id_pesanan %>'"
                >
                  <td>
                    <div class="d-flex align-items-center">
                      <div class="me-3">
                        <% const isPermak = pesanan.PesananPermak ? true :
                        false; %>
                        <span
                          class="badge <%= isPermak ? 'bg-info' : 'bg-primary' %>"
                        >
                          <%= isPermak ? 'Permak' : 'Jahit' %>
                        </span>
                      </div>
                      <div>
                        <div class="fw-bold">#<%= pesanan.id_pesanan %></div>
                        <small class="text-muted"
                          ><%= pesanan.PelangganPesanan.nama_pelanggan %></small
                        >
                      </div>
                    </div>
                  </td>
                  <td class="text-end">
                    <div class="fw-bold">
                      Rp <%= formatNumber(pesanan.jumlah_total) %>
                    </div>
                    <small class="text-muted"
                      ><%= formatDate(pesanan.tanggal_pesanan) %></small
                    >
                  </td>
                </tr>
                <% }); %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<%- contentFor('scripts') %>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  let chart;
  let isLoading = false;

  function initChart(data) {
    const ctx = document.getElementById("trenPendapatanChart").getContext("2d");

    if (chart) {
      chart.destroy();
    }

    chart = new Chart(ctx, {
      type: "line",
      data: {
        labels: data.labels,
        datasets: [
          {
            label: "Pendapatan Permak",
            data: data.pendapatanPermak,
            borderColor: "rgb(54, 162, 235)",
            backgroundColor: "rgba(54, 162, 235, 0.1)",
            fill: true,
            tension: 0.4,
          },
          {
            label: "Pendapatan Jahit",
            data: data.pendapatanJahit,
            borderColor: "rgb(255, 99, 132)",
            backgroundColor: "rgba(255, 99, 132, 0.1)",
            fill: true,
            tension: 0.4,
          },
        ],
      },
      options: {
        responsive: true,
        interaction: {
          intersect: false,
          mode: "index",
        },
        plugins: {
          legend: {
            position: "top",
          },
          tooltip: {
            callbacks: {
              label: function (context) {
                return (
                  context.dataset.label +
                  ": Rp " +
                  new Intl.NumberFormat("id-ID").format(context.raw)
                );
              },
            },
          },
        },
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              callback: function (value) {
                return "Rp " + new Intl.NumberFormat("id-ID").format(value);
              },
            },
          },
        },
      },
    });
  }

  function updateChart() {
    if (isLoading) return;
    isLoading = true;

    const loading = document.getElementById("chartLoading");
    loading.classList.remove("d-none");

    const year = document.getElementById("yearFilter").value;
    const month = document.getElementById("monthFilter").value;

    fetch(`/admin/dashboard/tren-pendapatan?year=${year}&month=${month}`)
      .then((response) => response.json())
      .then((data) => {
        initChart(data);
      })
      .catch((error) => {
        console.error("Error:", error);
        alert("Gagal memuat data grafik");
      })
      .finally(() => {
        isLoading = false;
        loading.classList.add("d-none");
      });
  }

  document.getElementById("yearFilter").addEventListener("change", updateChart);
  document
    .getElementById("monthFilter")
    .addEventListener("change", updateChart);

  // Initial load
  updateChart();
</script>

<script>
  // Script untuk filter total pendapatan
  document
    .getElementById("periodePendapatan")
    .addEventListener("change", function () {
      const periode = this.value;
      const loadingText = "Loading...";
      const periodText = document.getElementById("periodePendapatanText");
      const totalElement = document.getElementById("totalPendapatanValue");

      // Tampilkan loading
      totalElement.textContent = loadingText;

      // Update text periode
      const periodeTexts = {
        all: "Total semua waktu",
        today: "Total hari ini",
        week: "Total minggu ini",
        month: "Total bulan ini",
        year: "Total tahun ini",
      };

      fetch(`/admin/dashboard/total-pendapatan?periode=${periode}`)
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            totalElement.textContent = `Rp ${new Intl.NumberFormat(
              "id-ID"
            ).format(data.total)}`;
            periodText.textContent = periodeTexts[periode];
          } else {
            throw new Error(data.message || "Terjadi kesalahan");
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          totalElement.textContent = "Error";
          alert("Gagal memuat data pendapatan");
        });
    });
</script>
